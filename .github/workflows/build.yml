name: Build and Test Python Application

on:
  push:
    branches:
      - main  # Adjust to your default branch
  pull_request:
    branches:
      - main  # Adjust to your default branch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'  # You can specify a specific version if needed

    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        fi
        pip install pyinstaller  # Install PyInstaller to build the binary
    
    - name: Build binary using PyInstaller
      run: |
        # Build the executable with PyInstaller
        if [ "${{ runner.os }}" == "Linux" ]; then
          pyinstaller --onefile --distpath dist/linux myscript.py
        elif [ "${{ runner.os }}" == "Windows" ]; then
          pyinstaller --onefile --distpath dist/windows myscript.py
        elif [ "${{ runner.os }}" == "macOS" ]; then
          pyinstaller --onefile --distpath dist/macos myscript.py
        fi
    
    - name: Debug - List files in dist directory
      run: |
        echo "Listing contents of dist directory:"
        ls -R dist  # List all files in dist directory
    
    - name: Check if build files are generated
      run: |
        # Verify that the expected files exist in the dist directory
        if [ -d "dist/linux" ]; then
          echo "Linux build exists"
          ls dist/linux
        fi
        if [ -d "dist/windows" ]; then
          echo "Windows build exists"
          ls dist/windows
        fi
        if [ -d "dist/macos" ]; then
          echo "macOS build exists"
          ls dist/macos
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: my-python-app-binaries
        path: |
          dist/linux/*  # For Linux
          dist/windows/*  # For Windows
          dist/macos/*  # For macOS

    - name: Run tests (optional)
      run: |
        python -m unittest discover  # Adjust this if you're using a different test framework
